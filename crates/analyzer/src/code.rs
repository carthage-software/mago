#[derive(Debug, Clone, Copy)]
pub struct Code;

impl Code {
    pub const INVALID_ASSIGNMENT: &'static str = "invalid-assignment";
    pub const ASSIGNMENT_TO_THIS: &'static str = "assignment-to-this";
    pub const ASSIGNMENT_TO_CONSTANT: &'static str = "assignment-to-constant";
    pub const ABSTRACT_INSTANTIATION: &'static str = "abstract-instantiation";
    pub const CLONE_INSIDE_LOOP: &'static str = "clone-inside-loop";
    pub const DUPLICATE_ARRAY_KEY: &'static str = "duplicate-array-key";
    pub const FALSABLE_RETURN_STATEMENT: &'static str = "falsable-return-statement";
    pub const IMPOSSIBLE_ARRAY_ACCESS: &'static str = "impossible-array-access";
    pub const IMPOSSIBLE_ARRAY_ASSIGNMENT: &'static str = "impossible-array-assignment";
    pub const MIXED_ASSIGNMENT: &'static str = "mixed-assignment";
    pub const IMPOSSIBLE_ASSIGNMENT: &'static str = "impossible-assignment";
    pub const IMPOSSIBLE_KEY_CHECK: &'static str = "impossible-key-check";
    pub const IMPOSSIBLE_NONNULL_ENTRY_CHECK: &'static str = "impossible-nonnull-entry-check";
    pub const IMPOSSIBLE_NULL_TYPE_COMPARISON: &'static str = "impossible-null-type-comparison";
    pub const IMPOSSIBLE_CONDITION: &'static str = "impossible-condition";
    pub const IMPOSSIBLE_TYPE_COMPARISON: &'static str = "impossible-type-comparison";
    pub const INVALID_DOCBLOCK: &'static str = "invalid-docblock";
    pub const INVALID_ARGUMENT: &'static str = "invalid-argument";
    pub const INVALID_ARRAY_ELEMENT_KEY: &'static str = "invalid-array-element-key";
    pub const INVALID_ARRAY_ELEMENT: &'static str = "invalid-array-element";
    pub const MISMATCHED_ARRAY_INDEX: &'static str = "mismatched-array-index";
    pub const INVALID_ARRAY_INDEX: &'static str = "invalid-array-index";
    pub const INVALID_ARRAY_ACCESS: &'static str = "invalid-array-access";
    pub const INVALID_METHOD_ACCESS: &'static str = "invalid-method-access";
    pub const INVALID_PROPERTY_ASSIGNMENT_VALUE: &'static str = "invalid-property-assignment-value";
    pub const INVALID_CONTINUE: &'static str = "invalid-continue";
    pub const INVALID_BREAK: &'static str = "invalid-break";
    pub const INVALID_RETURN_STATEMENT: &'static str = "invalid-return-statement";
    pub const INVALID_TYPE_CAST: &'static str = "invalid-type-cast";
    pub const INVALID_GLOBAL: &'static str = "invalid-global";
    pub const INVALID_THROW: &'static str = "invalid-throw";
    pub const INVALID_UNSET: &'static str = "invalid-unset";
    pub const INVALID_CALLABLE: &'static str = "invalid-callable";
    pub const UNKNOWN_NAMED_ARGUMENT: &'static str = "invalid-named-argument";
    pub const LESS_SPECIFIC_ARGUMENT: &'static str = "less-specific-argument";
    pub const LESS_SPECIFIC_NESTED_ARGUMENT_TYPE: &'static str = "less-specific-nested-argument-type";
    pub const LESS_SPECIFIC_NESTED_RETURN_STATEMENT: &'static str = "less-specific-nested-return-statement";
    pub const LESS_SPECIFIC_RETURN_STATEMENT: &'static str = "less-specific-return-statement";
    pub const METHOD_ACCESS_ON_NULL: &'static str = "method-access-on-null";
    pub const MIXED_RETURN_STATEMENT: &'static str = "mixed-return-statement";
    pub const MIXED_ARGUMENT: &'static str = "mixed-argument";
    pub const MIXED_ARRAY_ACCESS: &'static str = "mixed-array-access";
    pub const MIXED_ARRAY_ASSIGNMENT: &'static str = "mixed-array-assignment";
    pub const MIXED_ARRAY_INDEX: &'static str = "mixed-array-index";
    pub const MIXED_METHOD_ACCESS: &'static str = "mixed-method-access";
    pub const POSSIBLY_NULL_OPERAND: &'static str = "possibly-null-operand";
    pub const NULL_OPERAND: &'static str = "null-operand";
    pub const POSSIBLY_FALSE_OPERAND: &'static str = "possibly-false-operand";
    pub const FALSE_OPERAND: &'static str = "false-operand";
    pub const POSSIBLY_INVALID_OPERAND: &'static str = "possibly-invalid-operand";
    pub const INVALID_OPERAND: &'static str = "invalid-operand";
    pub const MIXED_OPERAND: &'static str = "mixed-operand";
    pub const ARRAY_APPEND_IN_READ_CONTEXT: &'static str = "array-append-in-read-context";
    pub const MIXED_PROPERTY_TYPE_COERCION: &'static str = "mixed-property-type-coercion";
    pub const NO_VALUE: &'static str = "no-value";
    pub const NON_EXISTENT_CLASS: &'static str = "non-existent-class";
    pub const NON_EXISTENT_CLASS_LIKE: &'static str = "non-existent-class-like";
    pub const NON_EXISTENT_CONSTANT: &'static str = "non-existent-constant";
    pub const NON_EXISTENT_FUNCTION: &'static str = "non-existent-function";
    pub const NON_EXISTENT_METHOD: &'static str = "non-existent-method";
    pub const NON_EXISTENT_PROPERTY: &'static str = "non-existent-property";
    pub const NEVER_RETURN: &'static str = "never-return";
    pub const NULL_ARRAY_INDEX: &'static str = "null-array-index";
    pub const NULLABLE_RETURN_STATEMENT: &'static str = "nullable-return-statement";
    pub const PARADOXICAL_CONDITION: &'static str = "paradoxical-condition";
    pub const POSSIBLE_METHOD_ACCESS_ON_NULL: &'static str = "possible-method-access-on-null";
    pub const POSSIBLY_INVALID_ARGUMENT: &'static str = "possibly-invalid-argument";
    pub const POSSIBLY_NULL_ARRAY_ACCESS: &'static str = "possibly-null-array-access";
    pub const POSSIBLY_NULL_ARRAY_INDEX: &'static str = "possibly-null-array-index";
    pub const POSSIBLY_UNDEFINED_ARRAY_INDEX: &'static str = "possibly-undefined-array-index";
    pub const POSSIBLY_UNDEFINED_INT_ARRAY_INDEX: &'static str = "possibly-undefined-int-array-index";
    pub const POSSIBLY_UNDEFINED_STRING_ARRAY_INDEX: &'static str = "possibly-undefined-string-array-index";
    pub const PROPERTY_TYPE_COERCION: &'static str = "property-type-coercion";
    pub const REDUNDANT_CAST: &'static str = "redundant-cast";
    pub const REDUNDANT_NULL_COALESCE: &'static str = "redundant-null-coalesce";
    pub const IMPLICIT_TO_STRING_CAST: &'static str = "implicit-to-string-cast";
    pub const REDUNDANT_ISSET_CHECK: &'static str = "redundant-isset-check";
    pub const REDUNDANT_KEY_CHECK: &'static str = "redundant-key-check";
    pub const REDUNDANT_NONNULL_ENTRY_CHECK: &'static str = "redundant-nonnull-entry-check";
    pub const REDUNDANT_NONNULL_TYPE_COMPARISON: &'static str = "redundant-nonnull-type-comparison";
    pub const REDUNDANT_CONDITION: &'static str = "redundant-condition";
    pub const REDUNDANT_TYPE_COMPARISON: &'static str = "redundant-type-comparison";
    pub const REDUNDANT_COMPARISON: &'static str = "redundant-comparison";
    pub const REDUNDANT_LOGICAL_OPERATION: &'static str = "redundant-logical-operation";
    pub const TOO_FEW_ARGUMENTS: &'static str = "too-few-arguments";
    pub const TOO_MANY_ARGUMENTS: &'static str = "too-many-arguments";
    pub const UNDEFINED_INT_ARRAY_INDEX: &'static str = "undefined-int-array-index";
    pub const UNDEFINED_STRING_ARRAY_INDEX: &'static str = "undefined-string-array-index";
    pub const UNDEFINED_VARIABLE: &'static str = "undefined-variable";
    pub const POSSIBLY_UNDEFINED_VARIABLE: &'static str = "possibly-undefined-variable";
    pub const REFERENCE_TO_UNDEFINED_VARIABLE: &'static str = "reference-to-undefined-variable";
    pub const UNEVALUATED_CODE: &'static str = "unevaluated-code";
    pub const UNUSED_FUNCTION_CALL: &'static str = "unused-function-call";
    pub const UNUSED_METHOD_CALL: &'static str = "unused-method-call";
    pub const UNUSED_STATEMENT: &'static str = "unused-statement";
    pub const USELESS_CONTROL_FLOW: &'static str = "useless-control-flow";
    pub const IMPURE_STATIC_VARIABLE: &'static str = "impure-static-variable";
    pub const CONFLICTING_TEMPLATE_EQUALITY_BOUNDS: &'static str = "conflicting-template-equality-bounds";
    pub const INCOMPATIBLE_TEMPLATE_LOWER_BOUND: &'static str = "incompatible-template-lower-bound";
    pub const DEPRECATED_FUNCTION: &'static str = "deprecated-function";
    pub const DEPRECATED_METHOD: &'static str = "deprecated-method";
    pub const DEPRECATED_CLOSURE: &'static str = "deprecated-closure";
    pub const NAMED_ARGUMENT_NOT_ALLOWED: &'static str = "named-argument-not-allowed";
    pub const DUPLICATE_NAMED_ARGUMENT: &'static str = "duplicate-named-argument";
    pub const NAMED_ARGUMENT_OVERRIDES_POSITIONAL: &'static str = "named-argument-overrides-positional";
    pub const NAMED_ARGUMENT_AFTER_POSITIONAL: &'static str = "named-argument-after-positional";
    pub const TEMPLATE_CONSTRAINT_VIOLATION: &'static str = "template-constraint-violation";
    pub const ARRAY_TO_STRING_CONVERSION: &'static str = "array-to-string-conversion";
    pub const IMPLICIT_RESOURCE_TO_STRING_CAST: &'static str = "implicit-resource-to-string-cast";
    pub const MATCH_EXPRESSION_ONLY_DEFAULT_ARM: &'static str = "match-expression-only-default-arm";
    pub const EMPTY_MATCH_EXPRESSION: &'static str = "empty-match-expression";
    pub const UNKNOWN_MATCH_SUBJECT_TYPE: &'static str = "unknown-match-subject-type";
    pub const UNKNOWN_MATCH_CONDITION_TYPE: &'static str = "unknown-match-condition-type";
    pub const UNREACHABLE_MATCH_ARM_CONDITION: &'static str = "unreachable-match-arm-condition";
    pub const UNREACHABLE_MATCH_ARM: &'static str = "unreachable-match-arm";
    pub const UNREACHABLE_MATCH_DEFAULT_ARM: &'static str = "unreachable-match-default-arm";
    pub const MATCH_ARM_ALWAYS_TRUE: &'static str = "match-arm-always-true";
    pub const MATCH_DEFAULT_ARM_ALWAYS_EXECUTED: &'static str = "match-default-arm-always-executed";
    pub const MATCH_SUBJECT_TYPE_IS_NEVER: &'static str = "match-subject-type-is-never";
    pub const MATCH_NOT_EXHAUSTIVE: &'static str = "match-not-exhaustive";
    pub const NON_EXISTENT_ATTRIBUTE_CLASS: &'static str = "non-existent-attribute-class";
    pub const NON_CLASS_USED_AS_ATTRIBUTE: &'static str = "non-class-used-as-attribute";
    pub const CLASS_NOT_MARKED_AS_ATTRIBUTE: &'static str = "class-not-marked-as-attribute";
    pub const ATTRIBUTE_NOT_REPEATABLE: &'static str = "attribute-not-repeatable";
    pub const ABSTRACT_CLASS_USED_AS_ATTRIBUTE: &'static str = "abstract-class-used-as-attribute";
    pub const INVALID_ATTRIBUTE_TARGET: &'static str = "invalid-attribute-target";
    pub const INVALID_CATCH_TYPE: &'static str = "invalid-catch-type";
    pub const DUPLICATE_CAUGHT_TYPE: &'static str = "duplicate-caught-type";
    pub const NO_VALID_CATCH_TYPE_FOUND: &'static str = "no-valid-catch-type-found";
    pub const CATCH_TYPE_NOT_THROWABLE: &'static str = "catch-type-not-throwable";
    pub const INVALID_CATCH_TYPE_NOT_CLASS_OR_INTERFACE: &'static str = "invalid-catch-type-not-class-or-interface";
    pub const NON_EXISTENT_CATCH_TYPE: &'static str = "non-existent-catch-type";
    pub const UNKNOWN_ITERATOR_TYPE: &'static str = "unknown-iterator-type";
    pub const NULL_ITERATOR: &'static str = "null-iterator";
    pub const POSSIBLY_NULL_ITERATOR: &'static str = "possibly-null-iterator";
    pub const FALSE_ITERATOR: &'static str = "false-iterator";
    pub const POSSIBLY_FALSE_ITERATOR: &'static str = "possibly-false-iterator";
    pub const GENERIC_OBJECT_ITERATION: &'static str = "generic-object-iteration";
    pub const NON_ITERABLE_OBJECT_ITERATION: &'static str = "non-iterable-object-iteration";
    pub const ENUM_ITERATION: &'static str = "enum-iteration";
    pub const INVALID_ITERATOR: &'static str = "invalid-iterator";
    pub const POSSIBLY_INVALID_ITERATOR: &'static str = "possibly-invalid-iterator";
    pub const INVALID_FOREACH_KEY: &'static str = "invalid-foreach-key";
    pub const INVALID_FOREACH_VALUE: &'static str = "invalid-foreach-value";
    pub const UNDEFINED_VARIABLE_IN_CLOSURE_USE: &'static str = "undefined-variable-in-closure-use";
    pub const DUPLICATE_CLOSURE_USE_VARIABLE: &'static str = "duplicate-closure-use-variable";
    pub const INVALID_YIELD_VALUE_TYPE: &'static str = "invalid-yield-value-type";
    pub const INVALID_YIELD_KEY_TYPE: &'static str = "invalid-yield-key-type";
    pub const UNKNOWN_YIELD_FROM_ITERATOR_TYPE: &'static str = "unknown-yield-from-iterator-type";
    pub const YIELD_FROM_INVALID_SEND_TYPE: &'static str = "yield-from-invalid-send-type";
    pub const YIELD_FROM_NON_ITERABLE: &'static str = "yield-from-non-iterable";
    pub const YIELD_FROM_INVALID_VALUE_TYPE: &'static str = "yield-from-invalid-value-type";
    pub const YIELD_FROM_INVALID_KEY_TYPE: &'static str = "yield-from-invalid-key-type";
    pub const YIELD_OUTSIDE_FUNCTION: &'static str = "yield-outside-function";
    pub const INVALID_GENERATOR_RETURN_TYPE: &'static str = "invalid-generator-return-type";
    pub const HIDDEN_GENERATOR_RETURN: &'static str = "hidden-generator-return";
    pub const NAME_ALREADY_IN_USE: &'static str = "name-already-in-use";
    pub const SELF_OUTSIDE_CLASS_SCOPE: &'static str = "self-outside-class-scope";
    pub const STATIC_OUTSIDE_CLASS_SCOPE: &'static str = "static-outside-class-scope";
    pub const PARENT_OUTSIDE_CLASS_SCOPE: &'static str = "parent-outside-class-scope";
    pub const INVALID_PARENT_TYPE: &'static str = "invalid-parent-type";
    pub const INVALID_CLASS_STRING_EXPRESSION: &'static str = "invalid-class-string-expression";
    pub const UNKNOWN_CLASS_INSTANTIATION: &'static str = "unknown-class-instantiation";
    pub const INTERFACE_INSTANTIATION: &'static str = "interface-instantiation";
    pub const TRAIT_INSTANTIATION: &'static str = "trait-instantiation";
    pub const ENUM_INSTANTIATION: &'static str = "enum-instantiation";
    pub const DEPRECATED_CLASS: &'static str = "deprecated-class";
    pub const DEPRECATED_TRAIT: &'static str = "deprecated-trait";
    pub const UNSAFE_INSTANTIATION: &'static str = "unsafe-instantiation";
    pub const AMBIGUOUS_INSTANTIATION_TARGET: &'static str = "ambiguous-instantiation-target";
    pub const UNKNOWN_CONSTANT_SELECTOR_TYPE: &'static str = "unknown-constant-selector-type";
    pub const STRING_CONSTANT_SELECTOR: &'static str = "string-constant-selector";
    pub const INVALID_CONSTANT_SELECTOR: &'static str = "invalid-constant-selector";
    pub const AMBIGUOUS_CLASS_LIKE_CONSTANT_ACCESS: &'static str = "ambiguous-class-like-constant-access";
    pub const INVALID_CLASS_CONSTANT_ON_STRING: &'static str = "invalid-class-constant-on-string";
    pub const UNKNOWN_MEMBER_SELECTOR_TYPE: &'static str = "unknown-member-selector-type";
    pub const STRING_MEMBER_SELECTOR: &'static str = "string-member-selector";
    pub const INVALID_MEMBER_SELECTOR: &'static str = "invalid-member-selector";
    pub const INVALID_STATIC_METHOD_CALL: &'static str = "invalid-static-method-call";
    pub const DEPRECATED_FEATURE: &'static str = "deprecated-feature";
    pub const TYPE_INSPECTION: &'static str = "type-inspection";
    pub const TYPE_CONFIRMATION: &'static str = "type-confirmation";
    pub const NULL_PROPERTY_ACCESS: &'static str = "null-property-access";
    pub const POSSIBLY_NULL_PROPERTY_ACCESS: &'static str = "possibly-null-property-access";
    pub const MIXED_PROPERTY_ACCESS: &'static str = "mixed-property-access";
    pub const INVALID_PROPERTY_ACCESS: &'static str = "invalid-property-access";
    pub const AMBIGUOUS_OBJECT_PROPERTY_ACCESS: &'static str = "ambiguous-object-property-access";
    pub const INVALID_STATIC_PROPERTY_ACCESS: &'static str = "invalid-static-property-access";
    pub const REDUNDANT_NULLSAFE_OPERATOR: &'static str = "redundant-nullsafe-operator";
    pub const AMBIGUOUS_OBJECT_METHOD_ACCESS: &'static str = "ambiguous-object-method-access";
    pub const DISALLOWED_CONSTRUCT: &'static str = "disallowed-construct";
    pub const IMPURE_CONSTRUCT: &'static str = "impure-construct";
    pub const DOCBLOCK_TYPE_MISMATCH: &'static str = "docblock-type-mismatch";
    pub const INVALID_DESTRUCTURING_SOURCE: &'static str = "invalid-destructuring-source";
    pub const MIXED_DESTRUCTURING_SHAPE: &'static str = "mixed-destructuring-shape";
    pub const SKIP_IN_KEYED_DESTRUCTURING: &'static str = "skip-in-keyed-destructuring";
    pub const SPREAD_IN_DESTRUCTURING: &'static str = "spread-in-destructuring";
    pub const INVALID_STATIC_METHOD_ACCESS: &'static str = "invalid-static-method-access";
    pub const POSSIBLY_STATIC_ACCESS_ON_INTERFACE: &'static str = "possibly-static-access-on-interface";
    pub const STATIC_ACCESS_ON_INTERFACE: &'static str = "static-access-on-interface";
    pub const LIST_USED_IN_READ_CONTEXT: &'static str = "list-used-in-read-context";
    pub const INVALID_SCOPE_KEYWORD_CONTEXT: &'static str = "invalid-scope-keyword-context";
    pub const MIXED_CLONE: &'static str = "mixed-clone";
    pub const POSSIBLY_INVALID_CLONE: &'static str = "possibly-invalid-clone";
    pub const INVALID_CLONE: &'static str = "invalid-clone";
    pub const INVALID_EXTEND: &'static str = "invalid-extend";
    pub const INVALID_IMPLEMENT: &'static str = "invalid-implement";
    pub const MISSING_REQUIRED_INTERFACE: &'static str = "missing-required-interface";
    pub const MISSING_REQUIRED_PARENT: &'static str = "missing-required-parent";
    pub const MISSING_TEMPLATE_PARAMETER: &'static str = "missing-template-parameter";
    pub const EXCESS_TEMPLATE_PARAMETER: &'static str = "excess-template-parameter";
    pub const INCONSISTENT_TEMPLATE: &'static str = "inconsistent-template";
    pub const INVALID_TEMPLATE_PARAMETER: &'static str = "invalid-template-parameter";
    pub const UNIMPLEMENTED_ABSTRACT_METHOD: &'static str = "unimplemented-abstract-method";
    pub const OVERRIDDEN_PROPERTY_ACCESS: &'static str = "overridden-property-access";
    pub const INCOMPATIBLE_PROPERTY_TYPE: &'static str = "incompatible-property-type";
    pub const INVALID_PROPERTY_WRITE: &'static str = "invalid-property-write";
    pub const INVALID_PROPERTY_READ: &'static str = "invalid-property-read";
    pub const DEPRECATED_CONSTANT: &'static str = "deprecated-constant";
    pub const INVALID_ENUM_CASE_VALUE: &'static str = "invalid-enum-case-value";
    pub const CONDITION_IS_TOO_COMPLEX: &'static str = "condition-is-too-complex";
    pub const EXPRESSION_IS_TOO_COMPLEX: &'static str = "expression-is-too-complex";
    pub const WHERE_CONSTRAINT_VIOLATION: &'static str = "where-constraint-violation";
    pub const EXTEND_FINAL_CLASS: &'static str = "extend-final-class";
    pub const NON_EXISTENT_CLASS_CONSTANT: &'static str = "non-existent-class-constant";
    pub const POSSIBLY_FALSE_ARGUMENT: &'static str = "possibly-false-argument";
    pub const FALSE_ARGUMENT: &'static str = "false-argument";
    pub const POSSIBLY_NULL_ARGUMENT: &'static str = "possibly-null-argument";
    pub const NULL_ARGUMENT: &'static str = "null-argument";
    pub const NEVER_MATCHING_SWITCH_CASE: &'static str = "always-matching-switch-case";
    pub const ALWAYS_MATCHING_SWITCH_CASE: &'static str = "always-matching-switch-case";
    pub const UNREACHABLE_SWITCH_CASE: &'static str = "unreachable-switch-case";
    pub const UNREACHABLE_SWITCH_DEFAULT: &'static str = "unnecessary-switch-default";
    pub const INVALID_ISSET_EXPRESSION: &'static str = "invalid-isset-expression";
    pub const INVALID_TRAIT_USE: &'static str = "invalid-trait-use";
    pub const PSALM_TRACE: &'static str = "psalm-trace";
    pub const REFERENCE_CONSTRAINT_VIOLATION: &'static str = "reference-constraint-violation";
    pub const INVALID_PASS_BY_REFERENCE: &'static str = "invalid-pass-by-reference";
    pub const CONFLICTING_REFERENCE_CONSTRAINT: &'static str = "conflicting-reference-constraint";
}
